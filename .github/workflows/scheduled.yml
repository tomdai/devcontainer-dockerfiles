name: Update Images (Scheduled)

on:
  schedule:
    cron: 0 12 * * 6

jobs:
    clang:
      name: Build and push image - clang
      runs-on: ubuntu-latest
      if: contains(github.event.inputs.files, 'clang') || contains(github.event.inputs.files, 'all')
      steps:
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to GitHub Container Registry
          uses: docker/login-action@v1 
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build and push image
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/${{ github.actor }}/devcontainer-${{ github.job }}:latest
            file: ${{ github.job }}.dockerfile
            platforms: linux/amd64,linux/arm64

    java:
      name: Build and push image - java
      runs-on: ubuntu-latest
      if: contains(github.event.inputs.files, 'java') || contains(github.event.inputs.files, 'all')
      steps:
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to GitHub Container Registry
          uses: docker/login-action@v1 
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build and push image
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/${{ github.actor }}/devcontainer-${{ github.job }}:latest
            file: ${{ github.job }}.dockerfile
            platforms: linux/amd64,linux/arm64

    node:
      name: Build and push image - node
      runs-on: ubuntu-latest
      if: contains(github.event.inputs.files, 'node') || contains(github.event.inputs.files, 'all')
      steps:
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to GitHub Container Registry
          uses: docker/login-action@v1 
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build and push image
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/${{ github.actor }}/devcontainer-${{ github.job }}:latest
            file: ${{ github.job }}.dockerfile
            platforms: linux/amd64,linux/arm64

    python:
      name: Build and push image - python
      runs-on: ubuntu-latest
      if: contains(github.event.inputs.files, 'python') || contains(github.event.inputs.files, 'all')
      steps:
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to GitHub Container Registry
          uses: docker/login-action@v1 
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build and push image
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/${{ github.actor }}/devcontainer-${{ github.job }}:latest
            file: ${{ github.job }}.dockerfile
            platforms: linux/amd64,linux/arm64

    rust:
      name: Build and push image - rust
      runs-on: ubuntu-latest
      if: contains(github.event.inputs.files, 'rust') || contains(github.event.inputs.files, 'all')
      steps:
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Login to GitHub Container Registry
          uses: docker/login-action@v1 
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build and push image
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/${{ github.actor }}/devcontainer-${{ github.job }}:latest
            file: ${{ github.job }}.dockerfile
            platforms: linux/amd64,linux/arm64
